Краткая инструкция по написанию пользовательских алгоритмов.
Для простоты написания новых алгоритмов реализован класс-интерфейс algorithm находящийся в файле algorithm_maket.py.
Для того, чтобы программа могла запустить написанный пользователем алгоритм в классе реализующем алгоритм должна быть функция calculate(self, info), именно она будет вызываться со стороны программы.
Что бы добавить какую либо информацию в текстовое поле есть функция append_answer(string), реализованная в классе algorithm.
Что бы отметить какие либо элементы графа надо в переменную path записать массив состоящий из:
1) Массив вершин ребра между которыми надо окрасить
2) Какие ребра мы хотим окрасить (ориентированные или не ориентированные)
3) Цвет в который хотим окрасить (опционально, по умолчанию зеленый)
Пример :
self.path = [path, "Arrow" if self.parameters["Oriented graph"] else "Stick", "red"]

Так же пользователь может указать нужную дополнительную информацию о графе, а именно обязательные дынные и не обязательные.
self.priorityMark - словарь хранящий метки которые должны быть обязательно указаны перед работой алгоритма.
self.otherMark - словарь хранящий метки которые не обязательно должны быть указаны перед работой алгоритма.
Пример:
self.priorityMark = {"Top": {"From": "#ff2929", "Where": "#0c82c7"}}  
self.otherMark = {"Top": {"By": "#0cc779", "Without": "#7500eb"}}
Из соответствующих цветов и названий будут сгенерированы кнопки, которые будут отображаться в окне конфигурации алгоритма.
В теле самого алгоритма информации о том какие элементы были указаны будут храниться этих же словарях.
self.main_algo(self.priorityMark["Top"]["From"], self.priorityMark["Top"]["Where"])
В примере в функцию были переданы вершины, которые пользователь выбрал на графе.
